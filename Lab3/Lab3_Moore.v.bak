

module Lab3_Moore(CLK, dataIn, RST, odd);
//Input and Output Declarations
  input [3:0]	dataIn;
  input 		CLK;
  input 		RST;
  output    odd;

//DataInternal Variables
  reg [3:0] 	state;
  reg [3:0] 	next_state;
  reg [4:0]   sumid;
		
//State Declarations
  parameter reset = 3'b000;
  parameter s1   = 3'b001;
  parameter s2   = 3'b010;
  parameter s3   = 3'b011;
  parameter s4   = 3'b100;
//Combinational Next State Logic
always @(state or dataIn)
  case (state)
    reset:
      if (dataIn == 0)
			next_state = s1;
            assign sumid = 0;
      else
			next_state = reset;
	s1:
      if (dataIn == 0)
			next_state = s2;
            assign sumid = 0;
      else
			next_state = reset;
	s2:
      if (dataIn == 2)
			next_state = s3;
            assign sumid += 2;
      else if (dataIn == 0)
			next_state = s2;
		else
			next_state = reset;
	s3:
      if (dataIn == 5)
			next_state = s4;
            assign sumid += 5;
      else if(dataIn == 0)
			next_state = s1;
		else
			next_state = reset;
	s4:
		if (dataIn == 0)
			next_state = s1;
		else
			next_state = reset;
    default:
      next_state = reset;
  endcase // case(state)

//State FF Transition
always @(posedge CLK)
  if (RST == 1)
    state <= reset;
  else
    state <= next_state;

//Combinational Output Logic
assign odd = (state == s4 && (sumid % 2) == 1) ? 1 : 0;

endmodule // Moore StudentID Detector
  
